name: co2kernel_build
on:
  workflow_dispatch:
    inputs:
      KERNEL_NAME:
        description: "自定义 Linux version"
        required: true
        default: "-android13-8-o-01144-g8e1bc9d233a1"
      UTS_VERSION:
        description: "自定义 UTS_VERSION 时间戳"
        required: true
        default: "#1 SMP PREEMPT Thu Sep 4 03:07:39 UTC 2025"
      LXC:
        type: boolean
        description: "启用 LXC 支持"
        required: true
        default: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "DogEZ"
          git config --global user.email "DdogezD@gmail.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/co2kernel/kernel_manifest.git -b refs/heads/oneplus/sm8550 -m oneplus_open_v.xml --depth=1
          repo sync

      - name: Add co2kernel features
        run: |
          cd kernel_workspace
          git clone https://github.com/co2kernel/co2kernel_build.git build
          cd kernel_platform/common
          cp ../../build/patch/*.patch ./
          if [ "${{ github.event.inputs.LXC }}" = "true" ]; then
            patch -p1 < co2kernel_LXC_support.patch || true
            patch -p1 < co2kernel_revert_defconfig_spoofer.patch || true
            echo "已启用 LXC 支持"
          fi

      - name: Add KernelSU Next latest
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -
          cd ./KernelSU-Next
          MAKE_FILE="kernel/Makefile"
          DEFAULT_VERSION=11998
          KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))
          sed -i "s/^DKSU_VERSION.*/DKSU_VERSION=${KSU_VERSION}/" "${MAKE_FILE}"

      - name: Setup overwriter
        run: |
          cd kernel_workspace/kernel_platform/common
          chmod +x ./drivers/of/overwriter/overwrite_configs/convert_configs.sh
          ./drivers/of/overwriter/overwrite_configs/convert_configs.sh
          rm -rf ./drivers/of/overwriter/overwrite_configs
          rm -rf ./drivers/of/overwriter/tools
          rm -f ./drivers/of/overwriter/README.md

      - name: Spoof Linux version
        run: |
          cd kernel_workspace/kernel_platform
          sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
          sed -i '/UTS_VERSION=.*cut -b -\$UTS_LEN)/s#UTS_VERSION=.*#UTS_VERSION="\${{ github.event.inputs.UTS_VERSION }}"#' ./common/scripts/mkcompile_h

      - name: Build kernel
        run: |
          cd kernel_workspace
          LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh kalama gki

      - name: Make AnyKernel3
        run: |
         git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
         rm -rf ./AnyKernel3/.git
         cp kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/dist/Image ./AnyKernel3/

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: co2kernel_ak3
         path: ./AnyKernel3/*

      - name: Upload kernel image
        uses: actions/upload-artifact@v4
        with:
         name: co2kernel
         path: kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/dist/Image
